version: '3.3'

services:
  django:
    build: ./backend
    env_file:
      - ./.env
    ports:
      - "8000:8000"
    volumes:
      - ./backend/:/backend/:rw
      - ./backend/static:/static
      - ./backend/media:/media
    depends_on:
      - db
      - redis
    networks:
      - internal

  celery:
    build: ./backend
    command: celery -A config.celery worker --loglevel=info
    env_file:
      - .env
    volumes:
      - ./backend/:/backend/:rw
    depends_on:
      - db
      - redis
    networks:
      - internal

  celery_beat:
    build: ./backend
    command: celery -A config.celery beat --loglevel=info
    env_file:
      - .env
    volumes:
      - ./backend/:/backend/:rw
    depends_on:
      - db
      - redis
    networks:
      - internal

  db:
    image: postgres:13
    env_file:
      - .env
    environment:
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_DB: ${DB_NAME}
    volumes:
      - dbdata:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    networks:
      - internal

  redis:
    image: redis:6.2.6
    networks:
      - internal

  nginx:
    build: ./nginx/local
    command: "/bin/sh -c 'while :; do sleep 6h & wait $${!}; nginx -s reload; done & nginx -g \"daemon off;\"'"
    expose:
      - 80
    ports:
      - 80:80
      - "443:443"
    networks:
      - internal
    volumes:
      - ./backend/static:/static
      - ./backend/media:/media
      - ./data/certbot/conf:/etc/letsencrypt
      - ./data/certbot/www:/var/www/certbot
  certbot:
    image: certbot/certbot
    volumes:
      - ./data/certbot/conf:/etc/letsencrypt
      - ./data/certbot/www:/var/www/certbot
    entrypoint: "/bin/sh -c 'trap exit TERM; while :; do certbot renew; sleep 12h & wait $${!}; done;'"

volumes:
  dbdata:
  static:
  media:

networks:
  internal: